1.
client.cs里面的提交数据不要吧数据写在url里，要写在body里

2.
登录加密：
前端先请求一个rsa 公钥， 登录时把密码用公钥加密， 传json给后端
后端用私钥解密 密码， hash之后和数据库里的密码比对，成功后 返回一个用学号hash过，再加密好的token给前端
每次前端向后端发的json中都携带学号和token
后端会解密这个token，和学号hash后的字符串比对

string input = "123456";
RSACryptoServiceProvider RSAalg = new RSACryptoServiceProvider();
string publickeyXml = cipher.ConvertToXmlPublicJavaKey(RSAalg, publickeyConent);
string result = cipher.EncryptByRSA(input, publickeyXml);

static class cipher
{
    public static string EncryptByRSA(string plaintext, string publicKey)
    {
        UnicodeEncoding ByteConverter = new UnicodeEncoding();
        byte[] dataToEncrypt = ByteConverter.GetBytes(plaintext);
        using (RSACryptoServiceProvider RSA = new RSACryptoServiceProvider())
        {
            RSA.FromXmlString(publicKey);
            byte[] encryptedData = RSA.Encrypt(dataToEncrypt, false);
            return Convert.ToBase64String(encryptedData);
        }
    }

    public static string ConvertToXmlPublicJavaKey(this RSA rsa, string publicJavaKey)
    {
        RsaKeyParameters publicKeyParam = (RsaKeyParameters)PublicKeyFactory.CreateKey(Convert.FromBase64String(publicJavaKey));
        string xmlpublicKey = string.Format("<RSAKeyValue><Modulus>{0}</Modulus><Exponent>{1}</Exponent></RSAKeyValue>",
        Convert.ToBase64String(publicKeyParam.Modulus.ToByteArrayUnsigned()),
        Convert.ToBase64String(publicKeyParam.Exponent.ToByteArrayUnsigned()));
        return xmlpublicKey;
    }

}

高俊杰 13:41:28
项目-》右键-》管理NuGet程序包-》搜索 BouncyCastle 安装
高俊杰 13:41:57
然后用ctrl+.去补齐命名空间就行了